{"ast":null,"code":"var _jsxFileName = \"/Users/tylertseng/CS180/src/SignUp.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignUp() {\n  _s();\n  const [form, setForm] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (form.password !== form.confirmPassword) {\n      console.error('Passwords do not match');\n      return;\n    }\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/signup`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: form.email,\n          password: form.password\n        })\n      });\n      if (response.ok) {\n        navigate('/signin');\n      } else {\n        console.error('Error signing up:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error signing up:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: e => setForm({\n          ...form,\n          email: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: e => setForm({\n          ...form,\n          password: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm Password\",\n        value: form.confirmPassword,\n        onChange: e => setForm({\n          ...form,\n          confirmPassword: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(SignUp, \"eVBuwVx5jbI6P4GvyLCN6aU/1+U=\", false, function () {\n  return [useNavigate];\n});\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SignUp","_s","form","setForm","email","password","confirmPassword","navigate","handleSubmit","e","preventDefault","console","error","response","fetch","process","env","REACT_APP_API_BASE_URL","method","headers","body","JSON","stringify","ok","statusText","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/tylertseng/CS180/src/SignUp.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction SignUp() {\n    const [form, setForm] = useState({ email: '', password: '', confirmPassword: '' });\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (form.password !== form.confirmPassword) {\n            console.error('Passwords do not match');\n            return;\n        }\n        try {\n            const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/signup`, {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ email: form.email, password: form.password }),\n            });\n            if (response.ok) {\n                navigate('/signin');\n            } else {\n                console.error('Error signing up:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error signing up:', error);\n        }\n    };\n\n    return (\n        <div className=\"auth-container\">\n            <h2>Sign Up</h2>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={form.email}\n                    onChange={(e) => setForm({ ...form, email: e.target.value })}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={form.password}\n                    onChange={(e) => setForm({ ...form, password: e.target.value })}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    value={form.confirmPassword}\n                    onChange={(e) => setForm({ ...form, confirmPassword: e.target.value })}\n                />\n                <button type=\"submit\">Sign Up</button>\n            </form>\n        </div>\n    );\n}\n\nexport default SignUp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}