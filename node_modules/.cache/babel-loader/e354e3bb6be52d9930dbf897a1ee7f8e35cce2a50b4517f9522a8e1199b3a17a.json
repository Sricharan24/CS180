{"ast":null,"code":"var _jsxFileName = \"/Users/ritidesai/Downloads/CS180/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '';\nfunction App() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [budgets, setBudgets] = useState([]);\n  const [form, setForm] = useState({\n    amount: '',\n    category: '',\n    description: '',\n    date: ''\n  });\n\n  // State for report generation\n  const [reportForm, setReportForm] = useState({\n    startDate: '',\n    endDate: ''\n  });\n  const [reportData, setReportData] = useState(null);\n\n  // State for sorting\n  const [sortOrder, setSortOrder] = useState('date'); // Default sorting by date\n\n  useEffect(() => {\n    fetchTransactions();\n    fetchBudgets();\n  }, []);\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/transactions`);\n      const data = await response.json();\n      setTransactions(data);\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const fetchBudgets = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/budgets`);\n      const data = await response.json();\n      setBudgets(data);\n    } catch (error) {\n      console.error('Error fetching budgets:', error);\n    }\n  };\n  const addTransaction = async () => {\n    const transaction = {\n      user_id: '123',\n      // Mock user ID for now\n      ...form\n    };\n    try {\n      let response;\n      if (form._id) {\n        response = await fetch(`${API_BASE_URL}/transactions/${form._id}`, {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(transaction)\n        });\n      } else {\n        response = await fetch(`${API_BASE_URL}/transactions`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(transaction)\n        });\n      }\n      if (response.ok) {\n        const updatedTransaction = await response.json();\n        console.log('Transaction added/updated:', updatedTransaction);\n        setForm({\n          amount: '',\n          category: '',\n          description: '',\n          date: ''\n        });\n        fetchTransactions();\n      } else {\n        console.error('Error adding/updating transaction:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error adding/updating transaction:', error);\n    }\n  };\n  const deleteTransaction = async id => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/transactions/${id}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        console.log('Transaction deleted successfully');\n        setTransactions(transactions.filter(t => t._id !== id));\n      } else {\n        console.error('Error deleting transaction:', response.statusText);\n      }\n    } catch (error) {\n      console.error('Error deleting transaction:', error);\n    }\n  };\n  const handleEditTransaction = transaction => {\n    setForm({\n      _id: transaction._id,\n      amount: transaction.amount,\n      category: transaction.category,\n      description: transaction.description,\n      date: new Date(transaction.date).toISOString().split('T')[0]\n    });\n  };\n  const fetchReport = async () => {\n    try {\n      const response = await fetch(`${API_BASE_URL}/reports?startDate=${reportForm.startDate}&endDate=${reportForm.endDate}`);\n      if (!response.ok) {\n        throw new Error('Error fetching report');\n      }\n      const data = await response.json();\n      setReportData(data);\n    } catch (error) {\n      console.error('Error fetching report:', error);\n    }\n  };\n\n  // Function to download the report as CSV\n  const downloadReport = () => {\n    if (!reportData) return;\n    let csvContent = \"data:text/csv;charset=utf-8,\";\n\n    // Add Total Spending\n    csvContent += `Total Spending,${reportData.totalSpending.toFixed(2)}\\n\\n`;\n\n    // Add Category Breakdown\n    csvContent += \"Category,Amount\\n\";\n    Object.entries(reportData.categoryBreakdown).forEach(([category, amount]) => {\n      csvContent += `${category},${amount.toFixed(2)}\\n`;\n    });\n    const encodedUri = encodeURI(csvContent);\n    const link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"Financial Report.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  // Sorting function\n  const sortTransactions = transactions => {\n    if (sortOrder === 'amount') {\n      return transactions.sort((a, b) => parseFloat(a.amount) - parseFloat(b.amount));\n    } else {\n      return transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"logo-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/logo.png\",\n        alt: \"FinWise Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Personal Finance Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Transaction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Amount\",\n        value: form.amount,\n        onChange: e => setForm({\n          ...form,\n          amount: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Category\",\n        value: form.category,\n        onChange: e => setForm({\n          ...form,\n          category: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: form.description,\n        onChange: e => setForm({\n          ...form,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Date\",\n        value: form.date,\n        onChange: e => setForm({\n          ...form,\n          date: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTransaction,\n        children: form._id ? 'Update Transaction' : 'Add Transaction'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sortOrder\",\n          children: \"Sort by: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sortOrder\",\n          value: sortOrder,\n          onChange: e => setSortOrder(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"date\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"amount\",\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: sortTransactions(transactions).map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: new Date(t.date).toLocaleDateString('en-US')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), \" | $\", t.amount, \" - \", t.category, \" (\", t.description, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'blue',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer',\n              padding: '5px 8px',\n              fontSize: '12px',\n              borderRadius: '4px',\n              position: 'absolute',\n              top: '0'\n            },\n            onClick: () => handleEditTransaction(t),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: 'red',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer',\n              padding: '5px 8px',\n              fontSize: '12px',\n              borderRadius: '4px',\n              position: 'absolute',\n              top: '30px'\n            },\n            onClick: () => deleteTransaction(t._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 5\n          }, this)]\n        }, t._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Budgets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: budgets.map(b => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [b.category, \": $\", b.amount, \" (Ends: \", new Date(b.end_date).toLocaleDateString(), \")\"]\n        }, b._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: reportForm.startDate,\n        onChange: e => setReportForm({\n          ...reportForm,\n          startDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: reportForm.endDate,\n        onChange: e => setReportForm({\n          ...reportForm,\n          endDate: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchReport,\n        children: \"Generate Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), reportData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"report-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Report Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Total Spending:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 28\n          }, this), \" $\", reportData.totalSpending.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Category Breakdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: Object.entries(reportData.categoryBreakdown).map(([category, amount]) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [category, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 37\n            }, this), \" $\", amount.toFixed(2)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadReport,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            padding: '10px',\n            borderRadius: '5px',\n            cursor: 'pointer'\n          },\n          children: \"Download Report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"ZxNyCPW3KVIJV33BZ8AazhY/QEI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","App","_s","transactions","setTransactions","budgets","setBudgets","form","setForm","amount","category","description","date","reportForm","setReportForm","startDate","endDate","reportData","setReportData","sortOrder","setSortOrder","fetchTransactions","fetchBudgets","response","fetch","data","json","error","console","addTransaction","transaction","user_id","_id","method","headers","body","JSON","stringify","ok","updatedTransaction","log","statusText","deleteTransaction","id","filter","t","handleEditTransaction","Date","toISOString","split","fetchReport","Error","downloadReport","csvContent","totalSpending","toFixed","Object","entries","categoryBreakdown","forEach","encodedUri","encodeURI","link","document","createElement","setAttribute","appendChild","click","removeChild","sortTransactions","sort","a","b","parseFloat","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","htmlFor","map","style","display","justifyContent","alignItems","toLocaleDateString","backgroundColor","color","border","cursor","padding","fontSize","borderRadius","position","top","end_date","marginTop","_c","$RefreshReg$"],"sources":["/Users/ritidesai/Downloads/CS180/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || '';\n\nfunction App() {\n    const [transactions, setTransactions] = useState([]);\n    const [budgets, setBudgets] = useState([]);\n    const [form, setForm] = useState({ amount: '', category: '', description: '', date: '' });\n\n    // State for report generation\n    const [reportForm, setReportForm] = useState({ startDate: '', endDate: '' });\n    const [reportData, setReportData] = useState(null);\n\n    // State for sorting\n    const [sortOrder, setSortOrder] = useState('date'); // Default sorting by date\n\n    useEffect(() => {\n        fetchTransactions();\n        fetchBudgets();\n    }, []);\n\n    const fetchTransactions = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/transactions`);\n            const data = await response.json();\n            setTransactions(data);\n        } catch (error) {\n            console.error('Error fetching transactions:', error);\n        }\n    };\n\n    const fetchBudgets = async () => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/budgets`);\n            const data = await response.json();\n            setBudgets(data);\n        } catch (error) {\n            console.error('Error fetching budgets:', error);\n        }\n    };\n\n    const addTransaction = async () => {\n        const transaction = {\n            user_id: '123', // Mock user ID for now\n            ...form,\n        };\n\n        try {\n            let response;\n            if (form._id) {\n                response = await fetch(`${API_BASE_URL}/transactions/${form._id}`, {\n                    method: 'PUT',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(transaction),\n                });\n            } else {\n                response = await fetch(`${API_BASE_URL}/transactions`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify(transaction),\n                });\n            }\n\n            if (response.ok) {\n                const updatedTransaction = await response.json();\n                console.log('Transaction added/updated:', updatedTransaction);\n                setForm({ amount: '', category: '', description: '', date: '' });\n                fetchTransactions();\n            } else {\n                console.error('Error adding/updating transaction:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error adding/updating transaction:', error);\n        }\n    };\n\n    const deleteTransaction = async (id) => {\n        try {\n            const response = await fetch(`${API_BASE_URL}/transactions/${id}`, {\n                method: 'DELETE',\n            });\n\n            if (response.ok) {\n                console.log('Transaction deleted successfully');\n                setTransactions(transactions.filter((t) => t._id !== id));\n            } else {\n                console.error('Error deleting transaction:', response.statusText);\n            }\n        } catch (error) {\n            console.error('Error deleting transaction:', error);\n        }\n    };\n\n    const handleEditTransaction = (transaction) => {\n        setForm({\n            _id: transaction._id,\n            amount: transaction.amount,\n            category: transaction.category,\n            description: transaction.description,\n            date: new Date(transaction.date).toISOString().split('T')[0],\n        });\n    };\n\n    const fetchReport = async () => {\n        try {\n            const response = await fetch(\n                `${API_BASE_URL}/reports?startDate=${reportForm.startDate}&endDate=${reportForm.endDate}`\n            );\n            if (!response.ok) {\n                throw new Error('Error fetching report');\n            }\n            const data = await response.json();\n            setReportData(data);\n        } catch (error) {\n            console.error('Error fetching report:', error);\n        }\n    };\n\n    // Function to download the report as CSV\n    const downloadReport = () => {\n        if (!reportData) return;\n\n        let csvContent = \"data:text/csv;charset=utf-8,\";\n\n        // Add Total Spending\n        csvContent += `Total Spending,${reportData.totalSpending.toFixed(2)}\\n\\n`;\n\n        // Add Category Breakdown\n        csvContent += \"Category,Amount\\n\";\n        Object.entries(reportData.categoryBreakdown).forEach(([category, amount]) => {\n            csvContent += `${category},${amount.toFixed(2)}\\n`;\n        });\n\n        const encodedUri = encodeURI(csvContent);\n        const link = document.createElement(\"a\");\n        link.setAttribute(\"href\", encodedUri);\n        link.setAttribute(\"download\", \"Financial Report.csv\");\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    };\n\n    // Sorting function\n    const sortTransactions = (transactions) => {\n        if (sortOrder === 'amount') {\n            return transactions.sort((a, b) => parseFloat(a.amount) - parseFloat(b.amount));\n        } else {\n            return transactions.sort((a, b) => new Date(a.date) - new Date(b.date));\n        }\n    };\n\n    return (\n        <div>\n            <header className=\"logo-header\">\n                <img src=\"/logo.png\" alt=\"FinWise Logo\" className=\"logo\" />\n            </header>\n            <h1>Personal Finance Dashboard</h1>\n\n            {/* Add Transaction Section */}\n            <section>\n                <h2>Add Transaction</h2>\n                <input \n                    type=\"number\" \n                    placeholder=\"Amount\" \n                    value={form.amount} \n                    onChange={(e) => setForm({ ...form, amount: e.target.value })}\n                />\n                <input \n                    type=\"text\" \n                    placeholder=\"Category\" \n                    value={form.category} \n                    onChange={(e) => setForm({ ...form, category: e.target.value })}\n                />\n                <input \n                    type=\"text\" \n                    placeholder=\"Description\" \n                    value={form.description} \n                    onChange={(e) => setForm({ ...form, description: e.target.value })}\n                />\n                <input \n                    type=\"date\"\n                    placeholder=\"Date\"\n                    value={form.date}\n                    onChange={(e) => setForm({ ...form, date: e.target.value })}\n                />\n                <button onClick={addTransaction}>\n                    {form._id ? 'Update Transaction' : 'Add Transaction'}\n                </button>\n            </section>\n\n            {/* Transactions Section */}\n            <section>\n                <h2>Transactions</h2>\n                            {/* Sort Transactions */}\n            <section>\n                <label htmlFor=\"sortOrder\">Sort by: </label>\n                <select id=\"sortOrder\" value={sortOrder} onChange={(e) => setSortOrder(e.target.value)}>\n                    <option value=\"date\">Date</option>\n                    <option value=\"amount\">Amount</option>\n                </select>\n            </section>\n\n                <ul>\n                    {sortTransactions(transactions).map((t) => (\n                        <li key={t._id} style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                            <div>\n                                <strong>{new Date(t.date).toLocaleDateString('en-US')}</strong> | ${t.amount} - {t.category} ({t.description})\n                            </div>\n                            <button\n        style={{ backgroundColor: 'blue', color: 'white', border: 'none', cursor: 'pointer', padding: '5px 8px', fontSize: '12px', borderRadius: '4px', position: 'absolute', top: '0' }}\n        onClick={() => handleEditTransaction(t)}\n    >\n        Edit\n    </button>\n    <button\n        style={{ backgroundColor: 'red', color: 'white', border: 'none', cursor: 'pointer', padding: '5px 8px', fontSize: '12px', borderRadius: '4px', position: 'absolute', top: '30px' }}\n        onClick={() => deleteTransaction(t._id)}\n    >\n        Delete\n    </button>\n                        </li>\n                    ))}\n                </ul>\n            </section>\n\n            {/* Budgets Section */}\n            <section>\n                <h2>Budgets</h2>\n                <ul>\n                    {budgets.map((b) => (\n                        <li key={b._id}>\n                            {b.category}: ${b.amount} (Ends: {new Date(b.end_date).toLocaleDateString()})\n                        </li>\n                    ))}\n                </ul>\n            </section>\n\n            {/* Financial Report Section */}\n            <section>\n                <h2>Generate Report</h2>\n                <input \n                    type=\"date\" \n                    value={reportForm.startDate} \n                    onChange={(e) => setReportForm({ ...reportForm, startDate: e.target.value })} \n                />\n                <input \n                    type=\"date\" \n                    value={reportForm.endDate} \n                    onChange={(e) => setReportForm({ ...reportForm, endDate: e.target.value })} \n                />\n                <button onClick={fetchReport}>Generate Report</button>\n\n                {reportData && (\n                    <div className=\"report-container\">\n                        <h3>Report Summary</h3>\n                        <p><strong>Total Spending:</strong> ${reportData.totalSpending.toFixed(2)}</p>\n\n                        {/* Category Breakdown */}\n                        <h4>Category Breakdown</h4>\n                        <ul>\n                            {Object.entries(reportData.categoryBreakdown).map(([category, amount]) => (\n                                <li key={category}>\n                                    <strong>{category}:</strong> ${amount.toFixed(2)}\n                                </li>\n                            ))}\n                        </ul>\n\n                        <button onClick={downloadReport} style={{ marginTop: '10px', backgroundColor: '#007bff', color: 'white', padding: '10px', borderRadius: '5px', cursor: 'pointer' }}>\n                            Download Report\n                        </button>\n                    </div>\n                )}\n            </section>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}